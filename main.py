import csv
import html
import os.path
from os import path
import sys
import spotipy
from spotipy.oauth2 import SpotifyOAuth
from spotipy.oauth2 import SpotifyClientCredentials
import spotipy.util as util

def ConsolidateCSVs(path):
	gas_files = []
	with open('consolidated-tracks.csv', mode='w', newline='') as tracks_file:
		tracks_writer = csv.writer(tracks_file, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
		tracks_writer.writerow(['Title', 'Album', 'Artist',	'Duration (ms)', 'Rating', 'Play Count', 'Removed'])

		for filename in os.listdir(path):
			if filename[-3:] != 'csv':
				continue

			with open(path + "/" + filename, mode='r') as csv_file:
				csv_reader = csv.DictReader(csv_file)
				try:
					for row in csv_reader:
						tracks_writer.writerow([row['Title'], row['Album'], row['Artist'], row['Duration (ms)'], row['Rating'], row['Play Count'], row['Removed']])

				except Exception as e:
					gas_files.append(filename)
	
	print("Congrats! All your tracks have been consolidated into one CSV file, which you will find will be called consolidated-tracks.csv")
	gas_num = len(gas_files)
	if gas_num != 0:
		print("There was/were ", gas_num, " file(s) that were unable to be added to the CSV:")
		for gas in gas_files:
			print(gas)

	print()

def AuthenticateSpotify():
	scope = "playlist-modify-public"

	prompt_token = True
	while prompt_token:
		username = input("enter your username: \n")
		username = 'aly5321' #TODO: delete
		token = util.prompt_for_user_token(username, scope)
		if token:
			prompt_token = False
		else:
			print("Unable to authorize ", username)

	return (token, username)

def CreateSpotifyPlaylist(path):
	auth = AuthenticateSpotify()
	token = auth[0]
	username = auth[1]

	sp = spotipy.Spotify(auth=token)

	playlist_id = sp.user_playlist_create(username, 'GPM Library', public=True, description='This is a playlist generated by GPM-Library-Converter')['id']

	gas_songs = []

	with open(path, mode='r') as csv_file:
		csv_reader = csv.DictReader(csv_file)
		line_count = 0
		tracks = []
		print('searching for songs...')
		for row in csv_reader:
			if line_count == 0:
				line_count += 1
				continue
			
			res = sp.search(html.unescape(row['Title'] + " " + row['Artist'] + " " + row['Album']), limit=1, type='track')
			try:
				tracks.append(res['tracks']['items'][0]['id'])
			except Exception as e:
				gas_songs.append((row['Title'], row['Artist']))

			line_count += 1

			if line_count % 50 == 0:
				print('Finished searching ', line_count, ' songs')
		
		print('finished search.')
		print('adding songs to playlist...')
		for i in range(0, len(tracks), 50):
			tracks_subsection = tracks[i:i+50]
			sp.user_playlist_add_tracks(username, playlist_id, tracks_subsection)
	
	print("Congrats! All your tracks have been saved to the playlist 'GPM Library'")
	gas_num = len(gas_songs)
	if gas_num != 0:
		print("There was/were ", gas_num, " song(s) that were unable to be added to the playlist:")
		for gas_song in gas_songs:
			print(gas_song[0], " - ", gas_song[1])

	print()
			

if __name__ == "__main__":
	while True:
		print("Enter the number that you would like to select.")
		mode = input("  1 : Consolidate GPM library CSVs to one CSV\n  2 : Convert 1 CSV to playlist\n  3 : Quit\n")
		print()

		if mode == "1":
			mode_1 = True
			while mode_1:
				path = input("Enter the file path to the folder that contains the CSVs: \n")
				print()
				
				if '\\' in path:
					path = path.replace('\\', '/')
				
				if (os.path.isdir(path)):
					ConsolidateCSVs(path)
					mode_1 = False
				else:
					print("Invalid directory provided. Please try again.")

		elif mode == "2":
			print('Make sure your environment variables have been set! See README.md for more information.\n')

			mode_2 = True
			while mode_2:
				path = input('Enter the filepath of the csv you would like to convert to a spotify playlist, or say "default":\n')
				if path.lower() == 'default' or path.lower() == 'd':
					path = 'consolidated-tracks.csv'
				elif not os.path.isfile(path):
					print("Invalid file provided. Please try again.")
					continue
				
				CreateSpotifyPlaylist(path)
				mode_2 = False
		
		elif mode == "3":
			print("Closing program...")
			sys.exit()
		else:
			print("Invalid number provided.")